name: dockercompose5081081199938398777
services:
  adminer:
    container_name: daraja-adminer
    image: adminer
    networks:
      Daraja-Network: null
    ports:
      - mode: ingress
        target: 8080
        published: "8081"
        protocol: tcp
    restart: always
  darajaapi:
    build:
      context: C:\Users\Mwesh\source\repos\DarajaIntegration
      dockerfile: DarajaAPI/Dockerfile
    container_name: daraja-api
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8080"
      ASPNETCORE_HTTPS_PORTS: "8081"
    image: darajaapi
    networks:
      Daraja-Network: null
    ports:
      - mode: ingress
        target: 8080
        protocol: tcp
      - mode: ingress
        target: 8081
        protocol: tcp
    volumes:
      - type: bind
        source: C:\Users\Mwesh\AppData\Roaming/Microsoft/UserSecrets
        target: /home/app/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Mwesh\AppData\Roaming/ASP.NET/Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
  mysql:
    container_name: daraja-mysql
    environment:
      MYSQL_ROOT_PASSWORD: Admin123
    image: mysql
    networks:
      Daraja-Network: null
    ports:
      - mode: ingress
        target: 3306
        published: "3307"
        protocol: tcp
    restart: always
    volumes:
      - type: volume
        source: mysql_data
        target: /var/lib/mysql
        volume: {}
  redis:
    command:
      - redis-server
      - --protected-mode
      - "no"
    container_name: daraja-redis
    image: redis
    networks:
      Daraja-Network: null
    ports:
      - mode: ingress
        target: 6379
        published: "6380"
        protocol: tcp
    restart: always
networks:
  Daraja-Network:
    name: dockercompose5081081199938398777_Daraja-Network
    driver: bridge
volumes:
  mysql_data:
    name: dockercompose5081081199938398777_mysql_data